{
    "name": "Consolidation_OneEntity",
    "properties": {
        "activities": [
            {
                "name": "ConsolidationDF_staging",
                "type": "ExecuteDataFlow",
                "dependsOn": [
                    {
                        "activity": "Check data format valid",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "DeleteStagedJustInCase",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "1.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataflow": {
                        "referenceName": "Consolidation_flow",
                        "type": "DataFlowReference",
                        "parameters": {
                            "containerName": {
                                "value": "'@{pipeline().parameters.containerName}'",
                                "type": "Expression"
                            },
                            "entityName": {
                                "value": "'@{pipeline().parameters.entityName}'",
                                "type": "Expression"
                            },
                            "dataFormat": {
                                "value": "'@{variables('dataFormat')}'",
                                "type": "Expression"
                            }
                        }
                    },
                    "compute": {
                        "coreCount": 8,
                        "computeType": "General"
                    },
                    "traceLevel": "Fine"
                }
            },
            {
                "name": "DeleteData",
                "type": "Delete",
                "dependsOn": [
                    {
                        "activity": "ConsolidationDF_staging",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "data_dataset",
                        "type": "DatasetReference",
                        "parameters": {
                            "containerName": {
                                "value": "@pipeline().parameters.containerName",
                                "type": "Expression"
                            },
                            "entityName": {
                                "value": "@pipeline().parameters.entityName",
                                "type": "Expression"
                            }
                        }
                    },
                    "enableLogging": false,
                    "storeSettings": {
                        "type": "AzureBlobFSReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    }
                }
            },
            {
                "name": "IfDeleteDeltas",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Copy staging to data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@pipeline().parameters.deleteDeltas",
                        "type": "Expression"
                    },
                    "ifTrueActivities": [
                        {
                            "name": "DeleteDeltas",
                            "type": "Delete",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "dataset": {
                                    "referenceName": "deltas_dataset",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "containerName": {
                                            "value": "@pipeline().parameters.containerName",
                                            "type": "Expression"
                                        },
                                        "entityName": {
                                            "value": "@pipeline().parameters.entityName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "enableLogging": false,
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Lookup Data Manifest",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "JsonSource",
                        "storeSettings": {
                            "type": "AzureBlobFSReadSettings",
                            "recursive": true,
                            "enablePartitionDiscovery": false
                        },
                        "formatSettings": {
                            "type": "JsonReadSettings"
                        }
                    },
                    "dataset": {
                        "referenceName": "dataManifest_dataset",
                        "type": "DatasetReference",
                        "parameters": {
                            "containerName": {
                                "value": "@pipeline().parameters.containerName",
                                "type": "Expression"
                            }
                        }
                    },
                    "firstRowOnly": false
                }
            },
            {
                "name": "Filtered on entity",
                "type": "Filter",
                "dependsOn": [
                    {
                        "activity": "Lookup Data Manifest",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Lookup data manifest').output.value[0].entities",
                        "type": "Expression"
                    },
                    "condition": {
                        "value": "@equals(item().entityName, pipeline().parameters.entityName)",
                        "type": "Expression"
                    }
                }
            },
            {
                "name": "Entity found",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Filtered on entity",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@equals(\n    activity('Filtered on entity').output.FilteredItemsCount, \n    1\n)",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Entity not found",
                            "type": "Fail",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "message": {
                                    "value": "@concat(\n    'Entity ', \n    pipeline().parameters.entityName, \n    ' either duplicated or not found in the data manifest.'\n)",
                                    "type": "Expression"
                                },
                                "errorCode": "400"
                            }
                        }
                    ],
                    "ifTrueActivities": [
                        {
                            "name": "Set trait reference",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "traitReference",
                                "value": {
                                    "value": "@string(activity('Filtered on entity').output.value[0].dataPartitionPatterns[0].exhibitsTraits[0].traitReference)\n",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Check data format valid",
                "type": "IfCondition",
                "dependsOn": [
                    {
                        "activity": "Entity found",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "expression": {
                        "value": "@startswith(variables('traitReference'), variables('traitReferencePrefix'))",
                        "type": "Expression"
                    },
                    "ifFalseActivities": [
                        {
                            "name": "Bad data format",
                            "type": "Fail",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "message": {
                                    "value": "@concat('Entity ', pipeline().parameters.entityName, ' does not have a valid trait reference in the data manifest.')",
                                    "type": "Expression"
                                },
                                "errorCode": "400"
                            }
                        }
                    ],
                    "ifTrueActivities": [
                        {
                            "name": "Set data format",
                            "type": "SetVariable",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "variableName": "dataFormat",
                                "value": {
                                    "value": "@replace(\n    variables('traitReference'), \n    variables('traitReferencePrefix'),\n    ''\n)",
                                    "type": "Expression"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "DeleteStagingManifest",
                "type": "Delete",
                "dependsOn": [
                    {
                        "activity": "Copy staging to data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "stagingManifest_dataset",
                        "type": "DatasetReference",
                        "parameters": {
                            "containerName": {
                                "value": "@pipeline().parameters.containerName",
                                "type": "Expression"
                            }
                        }
                    },
                    "enableLogging": false,
                    "storeSettings": {
                        "type": "AzureBlobFSReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    }
                }
            },
            {
                "name": "Copy staging to data",
                "type": "Switch",
                "dependsOn": [
                    {
                        "activity": "DeleteData",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "on": {
                        "value": "@variables('dataFormat')",
                        "type": "Expression"
                    },
                    "cases": [
                        {
                            "value": "CSV",
                            "activities": [
                                {
                                    "name": "Copy CSV",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFileName": "*.csv",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "staging_dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "entityName": {
                                                    "value": "@pipeline().parameters.entityName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "data_dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "entityName": {
                                                    "value": "@pipeline().parameters.entityName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "value": "parquet",
                            "activities": [
                                {
                                    "name": "Copy parquet",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "DelimitedTextSource",
                                            "storeSettings": {
                                                "type": "AzureBlobFSReadSettings",
                                                "recursive": true,
                                                "wildcardFileName": "*.parquet",
                                                "enablePartitionDiscovery": false
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextReadSettings"
                                            }
                                        },
                                        "sink": {
                                            "type": "DelimitedTextSink",
                                            "storeSettings": {
                                                "type": "AzureBlobFSWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "DelimitedTextWriteSettings",
                                                "quoteAllText": true,
                                                "fileExtension": ".txt"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "typeConversion": true,
                                            "typeConversionSettings": {
                                                "allowDataTruncation": true,
                                                "treatBooleanAsNumber": false
                                            }
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "staging_dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "entityName": {
                                                    "value": "@pipeline().parameters.entityName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "data_dataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "containerName": {
                                                    "value": "@pipeline().parameters.containerName",
                                                    "type": "Expression"
                                                },
                                                "entityName": {
                                                    "value": "@pipeline().parameters.entityName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                    "defaultActivities": [
                        {
                            "name": "Trait reference not supported",
                            "type": "Fail",
                            "dependsOn": [],
                            "userProperties": [],
                            "typeProperties": {
                                "message": {
                                    "value": "@concat(\n    'Trait reference ',\n    variables('traitReference'),\n    ' for entity ',\n    pipeline().parameters.entityName,\n    ' not supported.'\n)",
                                    "type": "Expression"
                                },
                                "errorCode": "400"
                            }
                        }
                    ]
                }
            },
            {
                "name": "DeleteStagedJustInCase",
                "type": "Delete",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "staging_dataset",
                        "type": "DatasetReference",
                        "parameters": {
                            "containerName": {
                                "value": "@pipeline().parameters.containerName",
                                "type": "Expression"
                            },
                            "entityName": {
                                "value": "@pipeline().parameters.entityName",
                                "type": "Expression"
                            }
                        }
                    },
                    "enableLogging": false,
                    "storeSettings": {
                        "type": "AzureBlobFSReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    }
                }
            },
            {
                "name": "Delete staging",
                "type": "Delete",
                "dependsOn": [
                    {
                        "activity": "Copy staging to data",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "staging_dataset",
                        "type": "DatasetReference",
                        "parameters": {
                            "containerName": {
                                "value": "@pipeline().parameters.containerName",
                                "type": "Expression"
                            },
                            "entityName": {
                                "value": "@pipeline().parameters.entityName",
                                "type": "Expression"
                            }
                        }
                    },
                    "enableLogging": false,
                    "storeSettings": {
                        "type": "AzureBlobFSReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    }
                }
            }
        ],
        "parameters": {
            "containerName": {
                "type": "string"
            },
            "entityName": {
                "type": "string"
            },
            "deleteDeltas": {
                "type": "bool",
                "defaultValue": false
            }
        },
        "variables": {
            "dataFormat": {
                "type": "String"
            },
            "traitReferencePrefix": {
                "type": "String",
                "defaultValue": "is.partition.format."
            },
            "traitReference": {
                "type": "String"
            }
        },
        "annotations": []
    },
    "type": "Microsoft.Synapse/workspaces/pipelines"
}
